# Mostly for code coverage
before_install:
  - sudo apt-get update
  - rustup self update
addons:
  apt:
    packages:
      - libssl-dev
dist: trusty

language: rust
cache: 
  - cargo
  - apt
os:
  - linux

# Run rustfmt checks as a seperate build
matrix:
  # if all that's left to complete is allow_failures, pass/fail the build without waiting on them
  fast_finish: true
  include:
    - env: JOB=build
      script: cargo build
    - env: JOB=test
      script: cargo test
      after_success:
        - bash <(curl https://raw.githubusercontent.com/xd009642/tarpaulin/master/travis-install.sh)
        - cargo tarpaulin --out Xml
        - bash <(curl -s https://codecov.io/bash)
    - env: JOB=format
      cache: false # disabled because nightly needs things to be compiled against latest nightly
      script: cargo fmt -- --write-mode=diff
      before_script:
        - rustup toolchain install nightly # redundent, but easier
        - rustup run nightly cargo install rustfmt-nightly
        - export PATH=$PATH:~/.cargo/bin
    - env: JOB=clippy
      cache: false # disabled because nightly needs things to be compiled against latest nightly
      rust: nightly
      # Treats warnings like failures allowing a non 0 exit code failing the travis build
      script: cargo clippy --features "strict" -- -Z no-trans
      before_script:
        - cargo install clippy || echo "cargo-update already installed"
        - export PATH=$PATH:~/.cargo/bin
    - rust: nightly
      script: cargo build
  allow_failures:
    - env: JOB=clippy
    - rust: nightly

# Run builds for all the supported trains
# # Acts like a "known" working build, for when nightly is broken/a depenedency is broken because of a nightly breakage
rust: nightly-2017-11-12
